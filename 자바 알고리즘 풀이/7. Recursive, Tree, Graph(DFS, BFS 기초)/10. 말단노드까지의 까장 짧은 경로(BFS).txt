import java.util.*;
class Node{ 
    int data; 
    Node lt, rt; 
    public Node(int val) { 
        data=val; 
        lt=rt=null; 
    } 
} 
  
public class Main{ 
    Node root; 
	public int BFS(Node root){ 
		Queue<Node> Q=new LinkedList<>();
		Q.offer(root);
		int L=0;
		while(!Q.isEmpty()){	//비어있을 때 거짓이 되고 들어있으면 참이됨.
			int len=Q.size();
			for(int i=0; i<len; i++){	
				Node cur=Q.poll();
				if(cur.lt==null && cur.rt==null) return L;	//널이면 말단 노드 리턴
				if(cur.lt!=null) Q.offer(cur.lt);	//아니면 계속 뻗어 나가야 됨.
				if(cur.rt!=null) Q.offer(cur.rt);
			}
			L++;	//한 레벨 끝나면 L 증가(레벨 증가)
		}
		return 0;
    } 
  
    public static void main(String args[]) { 
        Main tree=new Main(); 
        tree.root=new Node(1); 
        tree.root.lt=new Node(2); 
        tree.root.rt=new Node(3); 
        tree.root.lt.lt=new Node(4); 
        tree.root.lt.rt=new Node(5); 
        System.out.println(tree.BFS(tree.root)); 
    } 
} 