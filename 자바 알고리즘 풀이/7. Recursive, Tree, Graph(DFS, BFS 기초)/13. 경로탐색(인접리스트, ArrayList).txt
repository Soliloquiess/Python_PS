import java.util.*;
class Main {
	static int n, m, answer=0;
	static ArrayList<ArrayList<Integer>> graph;	//인티저 형식의 데이터를 저장하는 어레이 리스트를 저장할 수 있는 어레이 리스트
	static int[] ch;
	public void DFS(int v){
		if(v==n) answer++;	//
		else{	//그렇지 않으면 뻗어라.
			for(int nv : graph.get(v)){	//v의 다음 정점은? 찾는다.
			//graph.get(v) 이게 정수를 저장하는 v번째 어레이리스트
				if(ch[nv]==0){
					ch[nv]=1;
					DFS(nv);
					ch[nv]=0;
				}
			}
		}
	}
	
	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		n=kb.nextInt();
		m=kb.nextInt();
		graph = new ArrayList<ArrayList<Integer>>();
		for(int i=0; i<=n; i++){
			graph.add(new ArrayList<Integer>());
		}
		ch=new int[n+1];
		for(int i=0; i<m; i++){
			int a=kb.nextInt();
			int b=kb.nextInt();
			graph.get(a).add(b);	//get으로 접근. a번 어레이 리스트에 접근(get으로)
			//그 a번 어레이 리스트에 정수 b를 더한다.
		}
		ch[1]=1;
		T.DFS(1);
		System.out.println(answer);
	}	
}